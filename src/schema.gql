# ------------------------------------------------------
# THIS FILE WAS AUTOMATICALLY GENERATED (DO NOT MODIFY)
# ------------------------------------------------------

type WeatherRecordType {
  pressureFromBMP180: Float
  temperatureFromBMP180: Float
  temperatureFromDTH22: Float
  humidityFromDTH22: Float
  analogSignalFromRainSensor: Float
  rssi: Float
  userId: Float
  createdAt: DateTime
}

"""
A date-time string at UTC, such as 2019-12-03T09:54:33Z, compliant with the date-time format.
"""
scalar DateTime

type WeatherRecordGroupedByTimeIntervalType {
  groupByInterval: String!
  records: [WeatherRecordType!]!
}

type Device {
  userId: Float!
  username: String!
}

type DeviceWithWeatherRecords {
  device: Device!
  isOnline: Boolean!
  weatherRecords: [WeatherRecordType!]!
}

type DeviceWithWeatherRecordsGroupedByTimeInterval {
  weatherStationId: Float!
  weatherRecordsGroupedByTimeInterval: [WeatherRecordGroupedByTimeIntervalType!]!
}

type DeviceStatus {
  device: Device!
  isOnline: Boolean!
}

type CurrentOnlineDevice {
  userId: Float!
  isOnline: Boolean!
}

type Query {
  weatherStationData(weatherStationIds: WeatherStationSpecifications!, dateRange: WeatherStationBetweenDates!): [WeatherRecordType!]!
  weatherStationDataGroupByTimeInterval(groupByInterval: String!, weatherStationIds: WeatherStationSpecifications!, dateRange: WeatherStationBetweenDates!): [WeatherRecordGroupedByTimeIntervalType!]!
  devicesWithWeatherRecords(weatherStationIds: WeatherStationSpecifications!, dateRange: WeatherStationBetweenDates!): [DeviceWithWeatherRecords!]!
  devicesWithWeatherRecordsGroupByTimeInterval(groupByInterval: String!, weatherStationIds: WeatherStationSpecifications!, dateRange: WeatherStationBetweenDates!): [DeviceWithWeatherRecordsGroupedByTimeInterval!]!
  devicesStatus: [DeviceStatus!]!
}

input WeatherStationSpecifications {
  weatherStationIds: [WeatherStationUserId!]!
}

input WeatherStationUserId {
  userId: Float!
}

input WeatherStationBetweenDates {
  startDate: String!
  endDate: String!
}

type Subscription {
  currentWeatherStationData(input: CurrentWeatherStationDataInput!): WeatherRecordType!
  updateDeviceOnlineStatus: CurrentOnlineDevice!
}

input CurrentWeatherStationDataInput {
  userIds: [Float!]!
}
